/*
    공용 스타일 파일(css 파일)
    - html에서 사용할 수 있는 공용 디자인 코드를 작성
    - style 태그 내부에 작성하는 내용만 기입
*/
@charset "UTF-8";

/* 
	공통적으로 적용될 스타일 
	- box-sizing : 폭 계산과 관련된 옵션
	- font-family : 페이지 전체 글꼴과 관련된 옵션
		- 문제)PC에 존재하는 글꼴만 사용할 수 있다
		- 웹 폰트(Web Font)를 이용해서 이 문제를 해결할 수 있다
			- 파워포인트에 글꼴을 첨부시키는 것과 같은 원리
			- 용량이 커지기 때문에 로딩이 길어지지만 대신 모든 사용자가 동일한 글꼴을 볼 수 있다
*/
* {
	box-sizing: border-box;
}

@font-face{
    font-family: arcadeclassic;
    src: url(font/ARCADECLASSIC.TTF);
}
@font-face{
	font-family: DungGeunMo;
	src: url(font/DungGeunMo.ttf)
}

/*
    이미지 관련 스타일
    - 기본 스타일은 .img
    - 확장 스타일은 4가지로 분류
        - .img-border : 마우스가 올라가면 테두리가 생성
        - .img-shadow : 마우스가 올라가면 그림자가 생성
        - .img-transparent : 마우스가 올라가면 이미지가 선명해짐
        - .img-circle : 이미지가 원형으로 처리되도록 구현
        - .img-round : 이미지가 둥근 모서리를 갖도록 구현
*/
.img-border {
	border: 1px solid transparent;
}

.img-border:hover {
	border-color: darkblue;
}

.img-shadow:hover {
	box-shadow: 0px 0px 3px 2px #333;
}

.img-transparent {
	opacity: 0.4;
}

.img-transparent:hover {
	opacity: 1;
}

.img-circle {
	border-radius: 50%;
}

.img-round {
	border-radius: 5px;
}

/*
    그냥 th, td가 아니라
    .table 안에 있는 th, td로 범위를 제한하여 사용!
    - 다른 스타일과 충돌 없이 사용이 가능
    [1] 직계 자식 태그만 선택( > )
    .table > thead > tr > th : .table 바로 밑의 thead 바로 밑의... 라는 뜻
    [2] 후손 태그 전체 선택
    .table th : .table 안에 있는 모든 th
*/
.table {
	width: 100%;
}

.table>thead>tr>th, .table>thead>tr>td, .table>tbody>tr>th, .table>tbody>tr>td,
	.table>tfoot>tr>th, .table>tfoot>tr>td {
	padding: 0.5rem;
	text-align: center;
}

/* 확장 스타일 1번 : .table-border 로 테두리를 부여 */
.table.table-border {
	/* 테이블에 테두리를 부여*/
	border: 1px solid black;
	/* 테두리 병합 */
	border-collapse: collapse;
}

.table.table-border>thead>tr>th, .table.table-border>thead>tr>td, .table.table-border>tbody>tr>th,
	.table.table-border>tbody>tr>td, .table.table-border>tfoot>tr>th,
	.table.table-border>tfoot>tr>td {
	/* 칸에 테두리를 부여 */
	border: 1px solid black;
}

/* 확장 스타일 2번 : .table-stripe 로 줄무늬 부여 */
.table.table-stripe>tbody>tr:nth-child(2n) {
	/* RGB Hex String */
	background-color: #ffeaa7;
}

.table.table-stripe>thead>tr {
	background-color: #fdcb6e;
}

/* 확장 스타일 3번 : .table-sideopen 으로 옆트임 테이블 구현 */
.table.table-sideopen {
	border-top: 3px solid black;
	border-bottom: 3px solid black;
	border-collapse: collapse;
}

.table.table-sideopen>tbody {
	border-top: 3px solid black;
	border-bottom: 3px solid black;
}

.table.table-sideopen>tbody>tr {
	border-bottom: 1px solid black;
}

/* 확장 스타일 4번 : .table-hover 로 마우스 감지 테이블 구현 */
.table.table-hover>tbody>tr:hover {
	background-color: #dfe6e9;
}

/*
    모달(modal) 스타일
    - 모달은 다음과 같은 형태로 구성되어야 한다.
    <div class="modal-wrap">
        <div class="modal">
        
        </div>
    </div>
<<<<<<< HEAD
    모달을 보여주고 싶다면 .modal-wrap에 .on을 추가한다
    <div class="modal-wrap on">
        <div>
        </div>
    </div>
*/
.modal-wrap {
	/* 전체를 가리기 위한 설정 */
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	/* opacity로 투명도를 조절하면 내용물도 적용된다 */
	/* opacity: 0.5; */
	/* 배경색에 알파값을  */
	background-color: rgba(0, 0, 0, 0.5);
	/* 모달은 기본적으로 표시가 되면 안된다 */
	display: none;
}

.modal-wrap.on {
	display: block;
}

.modal {
	position: absolute;
	width: 400px;
	height: 400px;
	/* 중앙에 배치하기 위한 코드 */
	background-color: white;
	top: 50%;
	left: 50%;
	/* 
        방법 1 : margin 을 활용 (폭이 고정일 경우) 
        - 폭을 반드시 알아야 함
        - 모든 브라우저에서 지원
    */
	/*
    margin-left: -200px;
    margin-top: -200px;
    */
	/* 
        방법 2 : 이동 스타일을 사용하는 경우
        - 이동할 때 기준이 자기 자신이므로 폭을 몰라도 됨
        - 지원하지 않는 브라우저가 있음
    */
	transform: translate(-50%, -50%)
}

/*
    메뉴 스타일
    - 메뉴와 같은 계층형 구조는 일반적으로 ul-li로 구현
    - list-style: none; 으로 앞에 점을 제거
    - ul이 가지고 있는 기본 padding과 margin을 제거
    작성 시 주의사항
    - 반드시 다음 구조로 메뉴를 구현해야 한다
    <ul class="menu">
        <li>
            <a>1차 메뉴명</a>
            <ul>
                <li>
                    <a>2차 메뉴명</a>
                    <ul>
                    ...(3차 이후도 마찬가지로 구현)...
                    </ul>
                </li>
            </ul>
        </li>
    </ul>
*/
.menu, .menu ul {
	list-style: none;
	padding: 0;
	margin: 0;
	font-weight: 900;
}

.menu {
	background-color: firebrick;
	z-index: 3000;
}

.menu>li {
	/* 폭 설정이 가능해야하므로 inline-block */
	display: inline-block;
}

/* 모든 li는 relative 설정 */
.menu li {
	position: relative;
	padding: 1rem;
	font-size: 15px;
	width: 140px;
	text-align: center;
	cursor: pointer;
}

.menu li:hover {
	opacity: 80%;
}

/*
    2단계 메뉴 설정
=======
    모달을 보여주고 싶다면 .modal-wrap에 .on을 추가한다
    <div class="modal-wrap on">
        <div>
        </div>
    </div>
*/
.modal-wrap {
	/* 전체를 가리기 위한 설정 */
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	/* opacity로 투명도를 조절하면 내용물도 적용된다 */
	/* opacity: 0.5; */
	/* 배경색에 알파값을  */
	background-color: rgba(0, 0, 0, 0.5);
	/* 모달은 기본적으로 표시가 되면 안된다 */
	display: none;
}

.modal-wrap.on {
	display: block;
}

.modal {
	position: absolute;
	width: 400px;
	height: 400px;
	/* 중앙에 배치하기 위한 코드 */
	background-color: white;
	top: 50%;
	left: 50%;
	/* 
        방법 1 : margin 을 활용 (폭이 고정일 경우) 
        - 폭을 반드시 알아야 함
        - 모든 브라우저에서 지원
    */
	/*
    margin-left: -200px;
    margin-top: -200px;
    */
	/* 
        방법 2 : 이동 스타일을 사용하는 경우
        - 이동할 때 기준이 자기 자신이므로 폭을 몰라도 됨
        - 지원하지 않는 브라우저가 있음
    */
	transform: translate(-50%, -50%)
}

/*
    메뉴 스타일
    - 메뉴와 같은 계층형 구조는 일반적으로 ul-li로 구현
    - list-style: none; 으로 앞에 점을 제거
    - ul이 가지고 있는 기본 padding과 margin을 제거
    작성 시 주의사항
    - 반드시 다음 구조로 메뉴를 구현해야 한다
    <ul class="menu">
        <li>
            <a>1차 메뉴명</a>
            <ul>
                <li>
                    <a>2차 메뉴명</a>
                    <ul>
                    ...(3차 이후도 마찬가지로 구현)...
                    </ul>
                </li>
            </ul>
        </li>
    </ul>
*/
.menu, .menu ul {
	list-style: none;
	padding: 0;
	margin: 0;
	font-weight: 900;
}

.menu {
	background-color: firebrick;
	z-index: 3000;
}

.menu>li {
	/* 폭 설정이 가능해야하므로 inline-block */
	display: inline-block;
}

/* 모든 li는 relative 설정 */
.menu li {
	position: relative;
	padding: 1rem;
	font-size: 15px;
	width: 140px;
	text-align: center;
	cursor: pointer;
}

.menu li:hover {
	opacity: 80%;
}

/*
    2단계 메뉴 설정
    1) 2단계 메뉴부터는 position을 absolute로 설정
    2) 처음에는 2단계 이후의 메뉴가 나오지 않도록 처리
*/
.menu>li ul {
	/* .menu li > ul */
	position: absolute;
	left: 0;
	/* 기준과 왼쪽을 맞춰라 */
	top: 100%;
	/* 기준의 바닥에 시작점을 맞춰라 */
	display: none;
	color: white;
	background-color: firebrick;
}

/* 메뉴에 커서가 올라가면 하위 메뉴가 나오도록 처리 */
.menu li:hover>ul {
	display: block;
	opacity: 80%;
}

.menu>li>ul>li:hover {
	opacity: 80%;
}

.menu a {
	/* .menu > li > a */
	color: white;
	text-decoration: none;
}

.menu li:hover a {
	color: floralwhite;
}

/* 3단계 이후부터는 우측에 나오도록 위치를 수정 (재정의) */
.menu>li>ul>li ul {
	top: 0;
	left: 100%;
}

/*
    확장 스타일 : 메뉴를 상단에 붙이고 싶은 경우의 스타일
*/
.menu.menu-fixed {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
}

main {
	width: 1100px;
	margin: auto;
	text-align: center;
	position: relative;
}

.notice-wrap {
	height: 0px;
}

.menu {
	text-align: center;
}

.foot {
	color: gray;
	text-align: center;
}

.intro {
	color: black;
	font-weight: 900;
	text-align: center;
}

.member-wrap h5, .notice-wrap h5 {
	display: inline-block;
	font-weight: 900;
	border: none;
}

.member-wrap a, .notice-wrap a {
	text-decoration: none;
	color: black;
}

.member-wrap .menu-font a:hover, .notice-wrap .menu-font a:hover {
	color: firebrick;
}

.member-wrap {
	position: absolute;
	top: 95px;
	left: 10px;
}

.menu-font:hover {
	
}

.notice-wrap {
	position: absolute;
	top: 95px;
	right: 10px;
	margin: 0;
}

html, body {
	padding: 0;
	margin: 0;
}

/* test 상태일 때 테두리를 설정 */
body[test] main, body[test] header, body[test] nav, body[test] section,
	body[test] footer, body[test] article, body[test] div, body[test] span,
	body[test] p, body[test] label, body[test] aside {
	border: 1px dotted black;
}

/* 
    컨텐츠 영역에 대한 폭 제어 스타일 
    - 모든 article은 가운데 정렬을 원칙으로 한다
    - 폭은 w-비율 형태의 class로 5 또는 10 단위로 지원한다
*/
article {
	margin: auto;
	text-align: center;
}

article.w-100 {
	width: 100%;
}

article.w-95 {
	width: 95%;
}

article.w-90 {
	width: 90%;
}

article.w-85 {
	width: 85%;
}

article.w-80 {
	width: 80%;
}

article.w-75 {
	width: 75%;
}

article.w-70 {
	width: 70%;
}

article.w-65 {
	width: 65%;
}

article.w-60 {
	width: 60%;
}

article.w-55 {
	width: 55%;
}

article.w-50 {
	width: 50%;
}

article.w-45 {
	width: 45%;
}

article.w-40 {
	width: 40%;
}

article.w-35 {
	width: 35%;
}

article.w-30 {
	width: 30%;
}

article.w-25 {
	width: 25%;
}

article.w-20 {
	width: 20%;
}

article.w-15 {
	width: 15%;
}

article.w-10 {
	width: 10%;
}

/*
    컨텐츠 내부의 줄(row) 스타일
    - 기본 간격을 10px로 설정 (상하 margin)
*/
article>div.row {
	margin: 10px 0;
}

/* 여백 설정이 필요할 때 사용할 수 있는 공간*/
div.row-empty {
	height: 20px;
}

article h1, article h2, article h3, article h4, article h5, article h5,
	article h6 {
	text-align: center;
}

/* 
    입력창 스타일
    - form-input : 100% 크기의 입력창
*/
.form-input {
	width: 100%;
	padding: 0.5rem;
	outline: none;
	/* 선택 시 자동부여되는 테두리 제거 */
}

.form-input:focus {
	border-color: #dd614a;
	border: 1px solid #dd614a;
}

.form-input.w-40 {
	width: 40%;
}

.form-input.w-25 {
	width: 25%;
}

.form-btn {
	width: 100px;
	padding: 0.5rem;
	outline: none;
	border: none;
	background-color: #2d90e3;
	color: white;
	cursor: pointer;
	font-weight: 700;
}

.form-btn:hover {
	background-color: #ff9b71;
}

.file-wrap:hover+.line, .preview-wrap:hover+.line {
	border-color: #ff9b71;
}

/* 
    입력창 확장 스타일 
  - form-input-image : 좌측에 그림이 들어갈 입력창
  - form-inline : 폭 100%를 사용하지 않겠다
*/
.form-input.form-input-image {
	padding-left: 3rem;
}

.form-input.form-inline, .form-btn.form-inline {
	width: auto;	
    background-color: #20639B;

}
.form-input.form-inline1{
	width: auto;
}
textarea.form-input {
	resize: vertical;
}

/*
    정렬과 관련된 스타일
  !important: 기존의 스타일과 충돌이 발생할 경우 먼저 적용되도록 중요하다고 표시
*/
.center {
	text-align: center !important;
}

.left {
	text-align: left !important;
}

.right {
	text-align: right !important;
}

a.deco {
	text-decoration: none;
}

/*
	list 페이지 css 스타일
*/
.wrap {
	position: relative;
}

.game-wrap .gameName {
	margin-bottom: 0px;
	margin-top: 20px;
}

.game-wrap {
	margin: 10px;
	margin-bottom: 5px;
	padding: 10px;
	display: inline-block;
}

.font-game {
	font-family: arcadeclassic;
	font-size: 30px;
	color: #20639B;
	
}
.gametitle{
	font-family: arcadeclassic;
	font-size: 15px;
	color: black;
}






.table.table1-stripe>tbody>tr:nth-child(2n) {
	/* RGB Hex String */
	background-color: #2d90e3;
}

.table.table-stripe>thead>tr {
	background-color: #2d90e3;
}